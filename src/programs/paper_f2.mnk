
f2 () =    0.8 @ (up3 <- 1) 
      | 0.2 @ (up3 <- 0);
        0.8 @ (up4 <- 1) 
      | 0.2 @ (up4 <- 0)

t () = 
  if sw=1; pt=2; up3=1 then sw<-2; pt<-5 else 
  if sw=1; pt=4; up4=1 then sw<-3; pt<-9 else  
  if sw=3; pt=10 then sw<-2;pt<-6 else 
  drop


p1() = if up3 = 1 
        then pt <- 3
        else pt <- 4 

p2() = pt <- 7

p2() = pt <- 10

p ()= 
  if sw=1 then p1 () else 
  if sw=2 then p2 ()
  else p3 ()


ingress ()= sw <- 1; pt <- 2

egress ()= sw <- 2; pt <- 7

p ()= 
  if sw=1 then pt = 2 else 
  if sw=2 then pt = 2 else 
  drop


main () = ProbModel {
    policy = p ();
    topology = t ();
    failure = f2 ();
    src = ingress ();
    des = egress ();
    }



